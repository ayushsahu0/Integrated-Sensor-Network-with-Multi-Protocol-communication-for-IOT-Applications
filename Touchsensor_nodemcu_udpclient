#include <ESP8266WiFi.h>
#include <WiFiUdp.h>

// Replace with your Wi-Fi credentials
const char* ssid = "M42";      // Your Wi-Fi SSID
const char* password = "keepgoing19";         // Your Wi-Fi Password

// UDP server details
const char* serverIP = "192.168.172.206";  // Replace with your server's IP address
  const int serverPort = 5005;               // Port on which the server listens

// Touch sensor pin
const int touchPin = D2;                   // GPIO Pin for the touch sensor

WiFiUDP udp;  // Create the UDP object

int lastTouchState = LOW;  // To store the last state of the touch sensor

void setup() {
  Serial.begin(9600);
  Serial.println("Starting ESP8266...");
  
  // Set touchPin as input
  pinMode(touchPin, INPUT);
  
  // Connect to Wi-Fi network
  WiFi.mode(WIFI_STA);  // Set as Station Mode
  WiFi.begin(ssid, password);
  
  unsigned long startTime = millis();
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
    Serial.print(" WiFi Status: ");
    Serial.println(WiFi.status());  // Print the status code for debugging
    if (millis() - startTime > 20000) {
      Serial.println("\nFailed to connect to WiFi. Restarting...");
      ESP.restart();
    }
  }

  Serial.println("\nConnected to WiFi!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
}

void loop() {
  // Read touch sensor value
  int touchState = digitalRead(touchPin);

  // Check if the state has changed
  if (touchState != lastTouchState) {
    lastTouchState = touchState;

    // Prepare the message to send
    char touchSignal = touchState == HIGH ? '1' : '0';

    // Attempt to send the packet
    if (udp.beginPacket(serverIP, serverPort)) {
      udp.write(&touchSignal, 1);  // Send a single byte
      udp.endPacket();
      Serial.print("Sent: ");
      Serial.println(touchSignal);
    } else {
      Serial.println("Failed to send packet!");
    }
  }

  // Small delay to debounce the touch sensor
  delay(50);
}
